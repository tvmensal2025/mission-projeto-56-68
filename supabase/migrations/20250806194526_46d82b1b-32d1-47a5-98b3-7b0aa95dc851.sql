-- Corre√ß√£o na fun√ß√£o sofia-image-analysis para suportar o fluxo completo de confirma√ß√£o

-- Primeiro, vamos corrigir problemas na tabela sofia_food_analysis
ALTER TABLE sofia_food_analysis ADD COLUMN IF NOT EXISTS confirmed_by_user BOOLEAN DEFAULT false;
ALTER TABLE sofia_food_analysis ADD COLUMN IF NOT EXISTS confirmation_prompt_sent BOOLEAN DEFAULT false;
ALTER TABLE sofia_food_analysis ADD COLUMN IF NOT EXISTS user_name TEXT;

-- Criar fun√ß√£o para formatar resposta da Sofia com confirma√ß√£o obrigat√≥ria
CREATE OR REPLACE FUNCTION format_sofia_food_response(
    detected_foods TEXT[],
    user_name TEXT,
    estimated_calories INTEGER DEFAULT 0
) RETURNS TEXT
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN format('Oi %s! üòä 

üì∏ Analisei sua refei√ß√£o e identifiquei:
%s

ü§î Esses alimentos est√£o corretos?', 
        COALESCE(user_name, 'querido(a)'),
        array_to_string(detected_foods, E'\n'));
END;
$$;

-- Fun√ß√£o para calcular calorias de confirma√ß√£o
CREATE OR REPLACE FUNCTION format_sofia_calories_response(
    user_name TEXT,
    calories INTEGER,
    foods TEXT[]
) RETURNS TEXT
LANGUAGE plpgsql
AS $$
BEGIN
    RETURN format('Perfeito, %s! ‚úÖ

üî• Estimativa cal√≥rica: aproximadamente %s kcal

%s

Continue compartilhando suas refei√ß√µes comigo! Se quiser uma an√°lise mais precisa, me conte as quantidades de cada item! üòâ‚ú®', 
        COALESCE(user_name, 'querido(a)'),
        calories,
        CASE 
            WHEN calories < 300 THEN 'Uma refei√ß√£o leve e saud√°vel! üå±'
            WHEN calories BETWEEN 300 AND 600 THEN '√ìtima quantidade de energia! üí™'
            WHEN calories BETWEEN 600 AND 900 THEN 'Uma refei√ß√£o bem completa! üçΩÔ∏è'
            ELSE 'Uma refei√ß√£o refor√ßada! ‚ö°'
        END
    );
END;
$$;