import { useEffect, useState } from "react";
import { supabase } from "@/integrations/supabase/client";
import { User } from "@supabase/supabase-js";
import { useNavigate } from "react-router-dom";
import { useAdminMode } from "@/hooks/useAdminMode";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useToast } from "@/hooks/use-toast";
import { 
  Heart, 
  LogOut, 
  Users, 
  BookOpen, 
  FileText,
  Settings,
  BarChart3,
  Shield,
  TrendingUp,
  Award,
  Calendar,
  Scale,
  Monitor,
  HelpCircle,
  Database,
  CreditCard,
  Activity,
  Bell,
  Brain,
  Building2,
  MessageCircle,
  Utensils
} from "lucide-react";
import AdminDashboard from "@/components/admin/AdminDashboard";
import UserManagement from "@/components/admin/UserManagement";
import WeighingMonitoring from "@/components/admin/WeighingMonitoring";
import { WeightReportGenerator } from "@/components/admin/WeightReportGenerator";
import AdvancedReports from "@/components/admin/AdvancedReports";
import { CourseManagementNew } from "@/components/admin/CourseManagementNew";
import DebugDataVerification from "@/components/DebugDataVerification";
import ToolsManagement from "@/components/admin/ToolsManagement";
import SessionManagement from "@/components/admin/SessionManagement";
import ChallengeManagement from "@/components/admin/ChallengeManagement";
import { N8nWebhookManager } from "@/components/N8nWebhookManager";
import { AIControlPanelUnified } from "@/components/admin/AIControlPanelUnified";
import CompanyConfiguration from "@/components/admin/CompanyConfiguration";
import { SessionAssigner } from "@/components/admin/SessionAssigner";

import SystemStatus from "@/components/admin/SystemStatus";
import SimulatedTests from "@/components/admin/SimulatedTests";
import PlatformAudit from "@/components/admin/PlatformAudit";

const AdminPage = () => {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const [activeSection, setActiveSection] = useState("dashboard");
  const [pendingGoals, setPendingGoals] = useState(0);
  const [stats, setStats] = useState({
    totalUsers: 0,
    totalCourses: 0,
    activeSessions: 0,
    completedMissions: 0
  });
  const navigate = useNavigate();
  const { toast } = useToast();
  
  // Verifica√ß√£o de admin usando hook existente
  const { isAdmin } = useAdminMode(user);

  useEffect(() => {
    // Get initial session
    supabase.auth.getSession().then(({ data: { session } }) => {
      setUser(session?.user ?? null);
      setLoading(false);
      
      if (!session) {
        navigate("/auth");
      }
    });

    // Listen for auth changes
    const { data: { subscription } } = supabase.auth.onAuthStateChange(
      (event, session) => {
        setUser(session?.user ?? null);
        if (!session) {
          navigate("/auth");
        }
      }
    );

    return () => subscription.unsubscribe();
  }, [navigate]);

  useEffect(() => {
    if (user) {
      fetchStats();
      fetchPendingGoals();
    }
  }, [user]);

  const fetchPendingGoals = async () => {
    try {
      const { count } = await supabase
        .from('user_goals')
        .select('*', { count: 'exact', head: true })
        .eq('status', 'pendente');
      
      setPendingGoals(count || 0);
    } catch (error) {
      console.error('Error fetching pending goals:', error);
    }
  };

  const fetchStats = async () => {
    try {
      // Fetch total users count
      const { count: usersCount } = await supabase
        .from('profiles')
        .select('*', { count: 'exact', head: true });

      // Fetch total courses count
      const { count: coursesCount } = await supabase
        .from('courses')
        .select('*', { count: 'exact', head: true });

      // Fetch today's completed missions
      const today = new Date().toISOString().split('T')[0];
      const { count: missionsCount } = await supabase
        .from('user_missions')
        .select('*', { count: 'exact', head: true })
        .eq('is_completed', true)
        .eq('date_assigned', today);

      setStats({
        totalUsers: usersCount || 0,
        totalCourses: coursesCount || 0,
        activeSessions: 12, // Mock data
        completedMissions: missionsCount || 0
      });
    } catch (error) {
      console.error('Error fetching stats:', error);
    }
  };

  const handleLogout = async () => {
    await supabase.auth.signOut();
    navigate("/");
  };

  const menuItems = [
    { id: 'dashboard', icon: BarChart3, label: 'Dashboard Admin', color: 'text-primary', description: 'Vis√£o geral completa do sistema' },
    { id: 'users', icon: Users, label: 'Gest√£o de Usu√°rios', color: 'text-blue-500', description: 'Gerenciar todos os usu√°rios' },
    { id: 'weighings', icon: Scale, label: 'Monitoramento de Pesagens', color: 'text-purple-500', description: 'Acompanhar todas as pesagens' },
    { id: 'reports', icon: TrendingUp, label: 'An√°lises e Relat√≥rios', color: 'text-green-500', description: 'Relat√≥rios avan√ßados e insights' },
    { id: 'courses', icon: BookOpen, label: 'Gest√£o de Cursos', color: 'text-orange-500', description: 'Gerenciar cursos e conte√∫do' },
    { id: 'challenges', icon: Award, label: 'Gest√£o de Metas e Desafios', color: 'text-pink-500', description: 'Criar e gerenciar metas e desafios' },
    { id: 'payments', icon: CreditCard, label: 'Gest√£o de Pagamentos', color: 'text-emerald-500', description: 'Gest√£o Asaas e assinaturas' },
    { id: 'company-config', icon: Building2, label: 'üè¢ Dados da Empresa', color: 'text-indigo-500', description: 'Configure dados da empresa para melhor IA' },
    { id: 'ai-control', icon: Brain, label: 'üß† Controle Unificado de IA', color: 'text-purple-500', description: 'Configura√ß√£o Avan√ßada - DrVital/Sofia - M√ÅXIMO/MEIO/M√çNIMO' },
    { id: 'mealie', icon: Utensils, label: 'Mealie (Card√°pio)', color: 'text-emerald-600', description: 'Curadoria de receitas e token' },
    { id: 'sessions', icon: FileText, label: 'Gest√£o de Sess√µes', color: 'text-cyan-500', description: 'Criar e enviar sess√µes personalizadas' },
    { id: 'n8n', icon: Activity, label: 'Automa√ß√£o n8n', color: 'text-violet-500', description: 'Webhooks para WhatsApp e automa√ß√µes' },
    { id: 'devices', icon: Monitor, label: 'Gest√£o de Dispositivos', color: 'text-indigo-500', description: 'Dispositivos conectados' },
    { id: 'settings', icon: Settings, label: 'Configura√ß√µes do Sistema', color: 'text-red-500', description: 'Configura√ß√µes gerais' },
    { id: 'security', icon: Shield, label: 'Seguran√ßa e Auditoria', color: 'text-yellow-500', description: 'Logs e seguran√ßa' },
    { id: 'support', icon: HelpCircle, label: 'Suporte e Ajuda', color: 'text-pink-500', description: 'Central de suporte' },
    { id: 'backup', icon: Database, label: 'Backup e Manuten√ß√£o', color: 'text-gray-500', description: 'Backup e manuten√ß√£o' },
    { id: 'system', icon: Database, label: 'Status do Sistema', color: 'text-blue-500', description: 'Verificar funcionamento' },
    { id: 'tests', icon: Activity, label: 'Admin Principal', color: 'text-green-500', description: 'Interface principal de administra√ß√£o' },
    { id: 'sofia', icon: MessageCircle, label: 'Gest√£o da Sofia', color: 'text-teal-500', description: 'Configura√ß√µes e monitoramento da IA Sofia' },
  ];

  if (loading) {
    return (
      <div className="min-h-screen bg-background flex items-center justify-center">
        <div className="text-center">
          <Heart className="h-12 w-12 text-primary mx-auto mb-4 animate-pulse" />
          <p className="text-muted-foreground">Carregando painel administrativo...</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return null; // Will redirect to auth
  }

  // Acesso liberado para todos os usu√°rios logados

  const userName = user.user_metadata?.full_name || user.email?.split("@")[0] || "Administrador";

  const renderContent = () => {
    switch (activeSection) {
      case 'dashboard':
        return <AdminDashboard />;
      case 'users':
        return <UserManagement />;
      case 'weighings':
        return <WeighingMonitoring />;
      case 'reports':
        return <AdvancedReports />;
      case 'courses':
        return <CourseManagementNew />;
      case 'challenges':
        return <ChallengeManagement user={user} />;
      case 'company-config':
        return <CompanyConfiguration />;
      case 'ai-control':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">üß† Controle Unificado de IA</h1>
                <p className="text-muted-foreground">Gerenciamento completo - DrVital/Sofia - OpenAI/Gemini</p>
              </div>
              <Badge variant="default" className="flex items-center gap-1">
                <Brain className="h-4 w-4" />
                IA 100% Funcional
              </Badge>
            </div>
            <AIControlPanelUnified />
          </div>
        );
      case 'mealie':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold flex items-center gap-2">
                  <Utensils className="h-6 w-6 text-emerald-600" />
                  Mealie (Gerador de Card√°pio)
                </h1>
                <p className="text-muted-foreground">
                  Painel de curadoria de receitas e token da API. Usu√°rios n√£o acessam este painel; apenas a Sofia consome a API com um token seguro.
                </p>
              </div>
              <div className="flex gap-2">
                <Button onClick={() => window.open('http://localhost:9925/admin/site-settings', '_blank')}>
                  Abrir Mealie Admin
                </Button>
                <Button variant="outline" onClick={() => window.open('http://localhost:9925/admin/recipes', '_blank')}>
                  Receitas
                </Button>
              </div>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>O que fazer aqui</CardTitle>
              </CardHeader>
              <CardContent className="space-y-3 text-sm">
                <ol className="list-decimal pl-5 space-y-2">
                  <li>
                    Gerar um <strong>Token de API</strong>: em Settings ‚Üí API Tokens (ou Personal Access Tokens) ‚Üí Create Token. Copie e guarde.
                  </li>
                  <li>
                    <strong>Salvar o token</strong> nos segredos (ex.: Supabase):
                    <pre className="mt-2 p-2 bg-muted rounded">supabase secrets set MEALIE_BASE_URL=http://localhost:9925 MEALIE_API_TOKEN=SEU_TOKEN</pre>
                  </li>
                  <li>
                    Fazer <strong>curadoria de receitas</strong>: adicione t√≠tulos, imagens, ingredientes e nutri√ß√£o quando dispon√≠vel.
                  </li>
                  <li>
                    Marcar <strong>tags por refei√ß√£o</strong>: breakfast, lunch, snack, dinner, supper.
                  </li>
                  <li>
                    Marcar <strong>dietas</strong> (keto/veg/etc.), alerg√™nicos, <strong>tempo</strong> de preparo e <strong>custo</strong>.
                  </li>
                  <li>
                    Manter ao menos <strong>10+ receitas por refei√ß√£o</strong> para variedade e rota√ß√£o.
                  </li>
                  <li>
                    Na Sofia, use a aba <strong>Card√°pio</strong> para gerar e testar; a fun√ß√£o usa esse token e suas tags.
                  </li>
                </ol>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Boas pr√°ticas</CardTitle>
              </CardHeader>
              <CardContent className="space-y-2 text-sm">
                <ul className="list-disc pl-5 space-y-1">
                  <li>Deixe o Mealie <strong>privado</strong> (ALLOW_SIGNUP=false) em produ√ß√£o.</li>
                  <li>Token <strong>service-only</strong>, n√£o compartilhar com usu√°rios.</li>
                  <li>Complete nutri√ß√£o sempre que poss√≠vel; se faltar, a Sofia complementa pela base local.</li>
                  <li>Revise variedade semanal e evite repeti√ß√£o de ingredientes.</li>
                </ul>
              </CardContent>
            </Card>
          </div>
        );
      case 'payments':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Gest√£o de Pagamentos</h1>
                <p className="text-muted-foreground">Integra√ß√£o com Asaas e controle de assinaturas</p>
              </div>
              <Button onClick={() => window.open('https://app.asaas.com', '_blank')}>
                <CreditCard className="h-4 w-4 mr-2" />
                Acessar Asaas
              </Button>
            </div>
            
            <div className="grid gap-4 md:grid-cols-3">
              <Card>
                <CardHeader>
                  <CardTitle>Receita Mensal</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">R$ 0,00</div>
                  <p className="text-xs text-muted-foreground">Este m√™s</p>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Assinantes Ativos</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">0</div>
                  <p className="text-xs text-muted-foreground">Planos premium</p>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Taxa de Convers√£o</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">0%</div>
                  <p className="text-xs text-muted-foreground">√öltimo m√™s</p>
                </CardContent>
              </Card>
            </div>
            
            <Card>
              <CardHeader>
                <CardTitle>Configura√ß√£o do Asaas</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-4">
                  <p className="text-muted-foreground">Configure sua integra√ß√£o com o gateway de pagamento Asaas.</p>
                  <div className="flex gap-2">
                    <Button variant="outline" onClick={() => window.open('https://docs.asaas.com', '_blank')}>
                      üìö Documenta√ß√£o
                    </Button>
                    <Button variant="outline" onClick={() => window.open('https://sandbox.asaas.com', '_blank')}>
                      üß™ Sandbox
                    </Button>
                    <Button onClick={() => window.open('https://app.asaas.com/api', '_blank')}>
                      üîë Chaves API
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
            
            <Card>
              <CardHeader>
                <CardTitle>Planos Dispon√≠veis</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2">
                  <div className="p-4 border rounded-lg">
                    <h4 className="font-semibold">Plano B√°sico</h4>
                    <p className="text-sm text-muted-foreground">Acesso aos recursos b√°sicos</p>
                    <div className="text-lg font-bold mt-2">R$ 29,90/m√™s</div>
                    <Button size="sm" className="mt-2" disabled>
                      Configurar
                    </Button>
                  </div>
                  <div className="p-4 border rounded-lg">
                    <h4 className="font-semibold">Plano Premium</h4>
                    <p className="text-sm text-muted-foreground">Acesso completo + coaching</p>
                    <div className="text-lg font-bold mt-2">R$ 97,90/m√™s</div>
                    <Button size="sm" className="mt-2" disabled>
                      Configurar
                    </Button>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        );
      case 'sessions':
        return (
          <div className="space-y-6">
            <SessionAssigner />
            <SessionManagement />
          </div>
        );
      case 'n8n':
        return <N8nWebhookManager />;
      case 'devices':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Gest√£o de Dispositivos</h1>
                <p className="text-muted-foreground">Dispositivos conectados e configura√ß√µes</p>
              </div>
              <Button onClick={() => setActiveSection('weighings')}>
                <Monitor className="h-4 w-4 mr-2" />
                Ver Monitoramento
              </Button>
            </div>
            
            <div className="grid gap-4 md:grid-cols-2">
              <Card>
                <CardHeader>
                  <CardTitle>Balan√ßas Xiaomi</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground mb-4">Configure a integra√ß√£o com balan√ßas inteligentes.</p>
                  <div className="space-y-2">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Dispositivos conectados</span>
                      <Badge>0</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">√öltima sincroniza√ß√£o</span>
                      <span className="text-xs text-muted-foreground">Nunca</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Status Bluetooth</span>
                      <Badge variant="destructive">Desconectado</Badge>
                    </div>
                  </div>
                  <div className="flex gap-2 mt-4">
                    <Button variant="outline" size="sm" onClick={() => toast({ title: "üîç Escaneando...", description: "Procurando dispositivos Bluetooth" })}>
                      Escanear
                    </Button>
                    <Button variant="outline" size="sm" onClick={() => toast({ title: "üîó Conectar", description: "Fun√ß√£o em desenvolvimento" })}>
                      Conectar
                    </Button>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Google Fit</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-sm text-muted-foreground mb-4">Sincroniza√ß√£o com dados do Google Fit.</p>
                  <div className="space-y-2">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Status da API</span>
                      <Badge variant="secondary">Inativo</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Usu√°rios conectados</span>
                      <Badge>0</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Dados sincronizados</span>
                      <span className="text-xs text-muted-foreground">0 registros</span>
                    </div>
                  </div>
                  <div className="flex gap-2 mt-4">
                    <Button variant="outline" size="sm" onClick={() => window.open('https://console.cloud.google.com/apis', '_blank')}>
                      Google Console
                    </Button>
                    <Button variant="outline" size="sm" onClick={() => toast({ title: "‚öôÔ∏è Configurar", description: "Fun√ß√£o em desenvolvimento" })}>
                      Configurar API
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>Dispositivos Suportados</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-3">
                  <div className="p-3 border rounded-lg text-center">
                    <div className="text-2xl mb-2">‚öñÔ∏è</div>
                    <h4 className="font-medium">Mi Body Composition Scale 2</h4>
                    <p className="text-xs text-muted-foreground">Bluetooth LE</p>
                  </div>
                  <div className="p-3 border rounded-lg text-center">
                    <div className="text-2xl mb-2">üì±</div>
                    <h4 className="font-medium">Mi Fit App</h4>
                    <p className="text-xs text-muted-foreground">Sincroniza√ß√£o autom√°tica</p>
                  </div>
                  <div className="p-3 border rounded-lg text-center">
                    <div className="text-2xl mb-2">üèÉ</div>
                    <h4 className="font-medium">Google Fit</h4>
                    <p className="text-xs text-muted-foreground">API REST</p>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        );
      case 'settings':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Configura√ß√µes Gerais</h1>
                <p className="text-muted-foreground">Configura√ß√µes globais do sistema</p>
              </div>
              <Button onClick={() => toast({ title: "üíæ Configura√ß√µes", description: "Salvando configura√ß√µes..." })}>
                <Settings className="h-4 w-4 mr-2" />
                Salvar Altera√ß√µes
              </Button>
            </div>
            
            <div className="grid gap-6">
              <Card>
                <CardHeader>
                  <CardTitle>Configura√ß√µes de Aplica√ß√£o</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">Modo Manuten√ß√£o</p>
                      <p className="text-sm text-muted-foreground">Bloquear acesso para manuten√ß√£o</p>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge variant="outline">Inativo</Badge>
                      <Button size="sm" variant="outline" onClick={() => toast({ title: "üîß Manuten√ß√£o", description: "Modo manuten√ß√£o ativado" })}>
                        Ativar
                      </Button>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">Registros P√∫blicos</p>
                      <p className="text-sm text-muted-foreground">Permitir novos cadastros</p>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge>Ativo</Badge>
                      <Button size="sm" variant="outline" onClick={() => toast({ title: "üö´ Registros", description: "Registros desabilitados" })}>
                        Desativar
                      </Button>
                    </div>
                  </div>
                  
                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">Notifica√ß√µes Email</p>
                      <p className="text-sm text-muted-foreground">Sistema de envio de emails</p>
                    </div>
                    <div className="flex items-center gap-2">
                      <Badge variant="secondary">Configurar</Badge>
                      <Button size="sm" variant="outline" onClick={() => toast({ title: "üìß Email", description: "Abrindo configura√ß√µes de email" })}>
                        Configurar
                      </Button>
                    </div>
                  </div>

                  <div className="flex items-center justify-between">
                    <div>
                      <p className="font-medium">Cache do Sistema</p>
                      <p className="text-sm text-muted-foreground">Limpar cache para melhor performance</p>
                    </div>
                    <Button size="sm" variant="outline" onClick={() => toast({ title: "üóëÔ∏è Cache", description: "Cache limpo com sucesso!" })}>
                      Limpar Cache
                    </Button>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Limites e Recursos</CardTitle>
                </CardHeader>
                <CardContent className="space-y-4">
                  <div className="grid grid-cols-2 gap-4">
                    <div className="p-3 border rounded-lg">
                      <p className="text-sm font-medium">M√°x. usu√°rios simult√¢neos</p>
                      <p className="text-2xl font-bold">1000</p>
                      <p className="text-xs text-muted-foreground">Atual: {stats.totalUsers}</p>
                    </div>
                    <div className="p-3 border rounded-lg">
                      <p className="text-sm font-medium">Armazenamento</p>
                      <p className="text-2xl font-bold">50GB</p>
                      <p className="text-xs text-muted-foreground">Usado: ~2.1GB</p>
                    </div>
                    <div className="p-3 border rounded-lg">
                      <p className="text-sm font-medium">Backup autom√°tico</p>
                      <p className="text-2xl font-bold">24h</p>
                      <p className="text-xs text-muted-foreground">√öltimo: hoje</p>
                    </div>
                    <div className="p-3 border rounded-lg">
                      <p className="text-sm font-medium">Uptime</p>
                      <p className="text-2xl font-bold">99.9%</p>
                      <p className="text-xs text-muted-foreground">√öltimos 30 dias</p>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Integra√ß√µes Externas</CardTitle>
                </CardHeader>
                <CardContent className="space-y-3">
                  <div className="flex justify-between items-center p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Supabase</p>
                      <p className="text-sm text-muted-foreground">Banco de dados e autentica√ß√£o</p>
                    </div>
                    <Badge>Conectado</Badge>
                  </div>
                  <div className="flex justify-between items-center p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">OpenAI</p>
                      <p className="text-sm text-muted-foreground">An√°lise de dados e IA</p>
                    </div>
                    <Badge variant="secondary">Configurar</Badge>
                  </div>
                  <div className="flex justify-between items-center p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Asaas</p>
                      <p className="text-sm text-muted-foreground">Gateway de pagamentos</p>
                    </div>
                    <Badge variant="outline">Pendente</Badge>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        );
      case 'security':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Seguran√ßa e Auditoria</h1>
                <p className="text-muted-foreground">Logs de seguran√ßa e monitoramento</p>
              </div>
            </div>
            
            <div className="grid gap-4 md:grid-cols-3">
              <Card>
                <CardHeader>
                  <CardTitle>Tentativas de Login</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">0</div>
                  <p className="text-xs text-muted-foreground">Falhadas hoje</p>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Sess√µes Ativas</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">1</div>
                  <p className="text-xs text-muted-foreground">Administradores online</p>
                </CardContent>
              </Card>
              
              <Card>
                <CardHeader>
                  <CardTitle>Backup</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-2xl font-bold">‚úì</div>
                  <p className="text-xs text-muted-foreground">√öltimo backup: hoje</p>
                </CardContent>
              </Card>
            </div>
            
            <Card>
              <CardHeader>
                <CardTitle>Logs de Auditoria</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between items-center py-2 border-b">
                    <span className="text-sm">Login administrativo</span>
                    <span className="text-xs text-muted-foreground">hoje, 20:04</span>
                  </div>
                  <div className="flex justify-between items-center py-2 border-b">
                    <span className="text-sm">Sess√£o criada</span>
                    <span className="text-xs text-muted-foreground">hoje, 20:01</span>
                  </div>
                  <div className="flex justify-between items-center py-2">
                    <span className="text-sm">Backup autom√°tico</span>
                    <span className="text-xs text-muted-foreground">hoje, 00:00</span>
                  </div>
                </div>
              </CardContent>
            </Card>
          </div>
        );
      case 'support':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Suporte e Ajuda</h1>
                <p className="text-muted-foreground">Central de suporte e documenta√ß√£o</p>
              </div>
              <Button onClick={() => toast({ title: "üé´ Ticket", description: "Criando novo ticket de suporte..." })}>
                <HelpCircle className="h-4 w-4 mr-2" />
                Novo Ticket
              </Button>
            </div>
            
            <div className="grid gap-6 md:grid-cols-2">
              <Card>
                <CardHeader>
                  <CardTitle>Tickets de Suporte</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Tickets abertos</span>
                      <Badge>0</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Tempo m√©dio resposta</span>
                      <span className="text-sm">&lt; 24h</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Tickets resolvidos</span>
                      <Badge variant="outline">15</Badge>
                    </div>
                    <Button className="w-full" onClick={() => toast({ title: "üìû Suporte", description: "Abrindo chat de suporte..." })}>
                      <HelpCircle className="h-4 w-4 mr-2" />
                      Chat de Suporte
                    </Button>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Documenta√ß√£o</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <Button variant="outline" className="w-full justify-start" onClick={() => window.open('https://docs.lovable.dev', '_blank')}>
                      üìñ Manual do Administrador
                    </Button>
                    <Button variant="outline" className="w-full justify-start" onClick={() => toast({ title: "‚öôÔ∏è Configura√ß√£o", description: "Abrindo guia de configura√ß√£o..." })}>
                      üîß Guia de Configura√ß√£o
                    </Button>
                    <Button variant="outline" className="w-full justify-start" onClick={() => toast({ title: "‚ùì FAQ", description: "Abrindo FAQ t√©cnico..." })}>
                      ‚ùì FAQ T√©cnico
                    </Button>
                    <Button variant="outline" className="w-full justify-start" onClick={() => window.open('https://supabase.com/docs', '_blank')}>
                      üîå APIs e Integra√ß√µes
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>Links √öteis</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-3 md:grid-cols-3">
                  <Button variant="outline" onClick={() => window.open('https://supabase.com/dashboard', '_blank')}>
                    üóÑÔ∏è Supabase Dashboard
                  </Button>
                  <Button variant="outline" onClick={() => window.open('https://vercel.com', '_blank')}>
                    üöÄ Vercel Dashboard
                  </Button>
                  <Button variant="outline" onClick={() => window.open('https://lovable.dev', '_blank')}>
                    üíú Lovable Platform
                  </Button>
                </div>
              </CardContent>
            </Card>

            <Card>
              <CardHeader>
                <CardTitle>Contato de Emerg√™ncia</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <p className="text-sm"><strong>Email:</strong> admin@seuapp.com</p>
                  <p className="text-sm"><strong>Telefone:</strong> (11) 99999-9999</p>
                  <p className="text-sm"><strong>WhatsApp:</strong> (11) 88888-8888</p>
                  <Button size="sm" className="mt-3" onClick={() => window.open('mailto:admin@seuapp.com?subject=Emerg√™ncia Admin', '_blank')}>
                    üìß Enviar Email
                  </Button>
                </div>
              </CardContent>
            </Card>
          </div>
        );
      case 'backup':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Backup e Manuten√ß√£o</h1>
                <p className="text-muted-foreground">Gest√£o de backups e manuten√ß√£o do sistema</p>
              </div>
              <Button onClick={() => toast({ title: "üíæ Backup", description: "Iniciando backup manual..." })}>
                <Database className="h-4 w-4 mr-2" />
                Backup Manual
              </Button>
            </div>
            
            <div className="grid gap-4 md:grid-cols-2">
              <Card>
                <CardHeader>
                  <CardTitle>Status do Backup</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">√öltimo backup</span>
                      <Badge>Hoje, 00:00</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Pr√≥ximo backup</span>
                      <span className="text-sm">Amanh√£, 00:00</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Tamanho atual</span>
                      <span className="text-sm">2.5 GB</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Reten√ß√£o</span>
                      <span className="text-sm">30 dias</span>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Status</span>
                      <Badge>Autom√°tico</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Manuten√ß√£o do Sistema</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <Button variant="outline" className="w-full justify-start" onClick={() => toast({ title: "üßπ Limpeza", description: "Limpando logs antigos..." })}>
                      üßπ Limpeza de Logs
                    </Button>
                    <Button variant="outline" className="w-full justify-start" onClick={() => toast({ title: "‚ö° Otimiza√ß√£o", description: "Otimizando banco de dados..." })}>
                      ‚ö° Otimiza√ß√£o BD
                    </Button>
                    <Button variant="outline" className="w-full justify-start" onClick={() => toast({ title: "üîç Verifica√ß√£o", description: "Verificando integridade dos dados..." })}>
                      üîç Verificar Integridade
                    </Button>
                    <Button variant="destructive" className="w-full justify-start" onClick={() => toast({ title: "üöß Manuten√ß√£o", description: "Ativando modo manuten√ß√£o..." })}>
                      üöß Modo Manuten√ß√£o
                    </Button>
                  </div>
                </CardContent>
              </Card>
            </div>

            <Card>
              <CardHeader>
                <CardTitle>Hist√≥rico de Backups</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="space-y-2">
                  <div className="flex justify-between items-center py-2 border-b">
                    <div>
                      <p className="text-sm font-medium">Backup completo</p>
                      <p className="text-xs text-muted-foreground">2.5 GB</p>
                    </div>
                    <div className="text-right">
                      <p className="text-sm">Hoje, 00:00</p>
                      <Badge>Sucesso</Badge>
                    </div>
                  </div>
                  <div className="flex justify-between items-center py-2 border-b">
                    <div>
                      <p className="text-sm font-medium">Backup incremental</p>
                      <p className="text-xs text-muted-foreground">150 MB</p>
                    </div>
                    <div className="text-right">
                      <p className="text-sm">Ontem, 00:00</p>
                      <Badge>Sucesso</Badge>
                    </div>
                  </div>
                  <div className="flex justify-between items-center py-2">
                    <div>
                      <p className="text-sm font-medium">Backup completo</p>
                      <p className="text-xs text-muted-foreground">2.3 GB</p>
                    </div>
                    <div className="text-right">
                      <p className="text-sm">H√° 2 dias</p>
                      <Badge>Sucesso</Badge>
                    </div>
                  </div>
                </div>
              </CardContent>
            </Card>

            <div className="grid gap-4 md:grid-cols-3">
              <Card>
                <CardHeader>
                  <CardTitle>Espa√ßo em Disco</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center">
                    <div className="text-2xl font-bold">78%</div>
                    <p className="text-xs text-muted-foreground">39 GB / 50 GB usados</p>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Performance</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center">
                    <div className="text-2xl font-bold">98%</div>
                    <p className="text-xs text-muted-foreground">Sistema saud√°vel</p>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Uptime</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="text-center">
                    <div className="text-2xl font-bold">99.9%</div>
                    <p className="text-xs text-muted-foreground">√öltimos 30 dias</p>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        );
      case 'system':
        return (
          <div className="space-y-6">
            <div className="flex items-center justify-between">
              <div>
                <h1 className="text-3xl font-bold">Status do Sistema</h1>
                <p className="text-muted-foreground">Verifica√ß√£o completa do funcionamento do sistema</p>
              </div>
              <Button onClick={() => toast({ title: "üîÑ Atualizando", description: "Verificando status do sistema..." })}>
                <Monitor className="h-4 w-4 mr-2" />
                Atualizar Status
              </Button>
            </div>
            
            {/* Sistema de verifica√ß√£o de dados atual */}
            <DebugDataVerification />
            
            {/* Status adicional dos servi√ßos */}
            <Card>
              <CardHeader>
                <CardTitle>Status dos Servi√ßos</CardTitle>
              </CardHeader>
              <CardContent>
                <div className="grid gap-4 md:grid-cols-2 lg:grid-cols-4">
                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Supabase</p>
                      <p className="text-xs text-muted-foreground">Database</p>
                    </div>
                    <Badge>üü¢ Online</Badge>
                  </div>
                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Vercel</p>
                      <p className="text-xs text-muted-foreground">Hosting</p>
                    </div>
                    <Badge>üü¢ Online</Badge>
                  </div>
                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Autentica√ß√£o</p>
                      <p className="text-xs text-muted-foreground">Auth Service</p>
                    </div>
                    <Badge>üü¢ Ativo</Badge>
                  </div>
                  <div className="flex items-center justify-between p-3 border rounded-lg">
                    <div>
                      <p className="font-medium">Storage</p>
                      <p className="text-xs text-muted-foreground">File Storage</p>
                    </div>
                    <Badge>üü¢ Dispon√≠vel</Badge>
                  </div>
                </div>
              </CardContent>
            </Card>

            <div className="grid gap-6 md:grid-cols-2">
              <Card>
                <CardHeader>
                  <CardTitle>M√©tricas de Performance</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-4">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Tempo de resposta m√©dio</span>
                      <Badge variant="outline">120ms</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Uptime</span>
                      <Badge>99.9%</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Uso de mem√≥ria</span>
                      <Badge variant="secondary">65%</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Conex√µes ativas</span>
                      <Badge variant="outline">{stats.totalUsers}</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>

              <Card>
                <CardHeader>
                  <CardTitle>Sa√∫de dos Componentes</CardTitle>
                </CardHeader>
                <CardContent>
                  <div className="space-y-3">
                    <div className="flex justify-between items-center">
                      <span className="text-sm">API Endpoints</span>
                      <Badge>‚úÖ Funcionando</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">WebSockets</span>
                      <Badge>‚úÖ Conectado</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">Cache Redis</span>
                      <Badge variant="secondary">‚ö†Ô∏è N/A</Badge>
                    </div>
                    <div className="flex justify-between items-center">
                      <span className="text-sm">CDN</span>
                      <Badge>‚úÖ Ativo</Badge>
                    </div>
                  </div>
                </CardContent>
              </Card>
            </div>
          </div>
        );
      case 'tests':
        return <SimulatedTests />;
      case 'sofia':
        return <SofiaManagement />;
      default:
        return <SystemStatus />;
    }
  };

  return (
    <div className="min-h-screen bg-background">
      {/* Header */}
      <header className="border-b border-border/20 bg-card/50 backdrop-blur-sm sticky top-0 z-50">
        <div className="container mx-auto px-4 py-4 flex justify-between items-center">
          <div className="flex items-center gap-2">
            <Shield className="h-8 w-8 text-red-500" />
            <div>
              <h1 className="text-2xl font-bold text-foreground">Painel Administrativo Completo</h1>
              <Badge variant="destructive" className="text-xs">Modo Admin Ativo</Badge>
            </div>
          </div>
          <div className="flex items-center gap-4">
            {/* Sino de Notifica√ß√µes */}
            {pendingGoals > 0 && (
              <div className="relative">
                <Button 
                  variant="outline" 
                  size="icon"
                  className="relative"
                  onClick={() => {
                    setActiveSection('challenges');
                    toast({
                      title: `üîî ${pendingGoals} metas pendentes`,
                      description: "H√° metas aguardando aprova√ß√£o na Gest√£o de Metas e Desafios"
                    });
                  }}
                >
                  <Bell className="w-4 h-4" />
                  <span className="absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full w-5 h-5 flex items-center justify-center">
                    {pendingGoals}
                  </span>
                </Button>
              </div>
            )}
            <div className="text-right">
              <p className="text-sm font-medium">{userName}</p>
              <p className="text-xs text-muted-foreground">{user.email}</p>
            </div>
            <Button onClick={handleLogout} variant="outline" size="sm">
              <LogOut className="h-4 w-4 mr-2" />
              Sair
            </Button>
          </div>
        </div>
      </header>

      <div className="flex">
        {/* Sidebar */}
        <aside className="w-80 border-r border-border/20 bg-card/30 backdrop-blur-sm min-h-screen">
          <div className="p-4">
            <h2 className="text-lg font-semibold mb-4 text-foreground">Menu Administrativo</h2>
            <nav className="space-y-2">
              {menuItems.map((item) => {
                const Icon = item.icon;
                const isActive = activeSection === item.id;
                return (
                  <button
                    key={item.id}
                    onClick={() => setActiveSection(item.id)}
                    className={`w-full flex items-center gap-3 p-3 rounded-lg transition-all duration-200 text-left ${
                      isActive 
                        ? 'bg-primary text-primary-foreground shadow-lg' 
                        : 'hover:bg-muted/70 text-muted-foreground hover:text-foreground'
                    }`}
                  >
                    <Icon className={`h-5 w-5 ${isActive ? 'text-primary-foreground' : item.color}`} />
                    <div className="flex-1">
                      <div className={`font-medium text-sm ${isActive ? 'text-primary-foreground' : 'text-foreground'}`}>{item.label}</div>
                      <div className={`text-xs ${isActive ? 'text-primary-foreground/80' : 'text-muted-foreground'}`}>{item.description}</div>
                    </div>
                  </button>
                );
              })}
            </nav>
          </div>
        </aside>
        {/* Main Content */}
        <main className="flex-1 p-8">
          {renderContent()}
        </main>
      </div>
    </div>
  );
};

export default AdminPage;