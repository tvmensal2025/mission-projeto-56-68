import { createClient } from '@supabase/supabase-js';

// Configurar cliente Supabase com autentica√ß√£o
const supabaseUrl = 'https://hlrkoyywjpckdotimtik.supabase.co';
const supabaseKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhscmtveXl3anBja2RvdGltdGlrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3MzU2NzI2NzAsImV4cCI6MjA1MTI0ODY3MH0.80f8f319d66e7e9e0ab9bc4deb8201d07649b9327356caaa441b7603d1f4358a';

const supabase = createClient(supabaseUrl, supabaseKey);

async function testGoogleAIDetailed() {
  console.log('üß™ Testando IA da Sofia com nova chave...');
  
  try {
    // Primeiro, fazer login como usu√°rio
    const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
      email: 'fa@gmail.com',
      password: '123456' // Senha de teste
    });

    if (authError) {
      console.log('‚ö†Ô∏è Erro de autentica√ß√£o:', authError.message);
      console.log('üì§ Testando sem autentica√ß√£o...');
    } else {
      console.log('‚úÖ Autenticado como:', authData.user.email);
    }

    console.log('üì§ Enviando mensagem: "fome"');
    
    const { data, error } = await supabase.functions.invoke('health-chat-bot', {
      body: {
        message: 'fome',
        userId: 'dd77ccfd-bc48-493d-9a01-257f5e8a1f2d', // Larissa
        conversationHistory: []
      }
    });

    if (error) {
      console.log('‚ùå Erro:', error);
    } else {
      console.log('‚úÖ Resposta:', data.response);
      console.log('ü§ñ IA ativa:', !data.response.includes('temporariamente indispon√≠vel'));
      
      if (!data.response.includes('temporariamente indispon√≠vel')) {
        console.log('üéâ SUCESSO! IA da Sofia funcionando!');
      } else {
        console.log('‚ö†Ô∏è IA ainda retornando fallback');
      }
    }

  } catch (error) {
    console.error('‚ùå Erro no teste:', error);
  }
}

testGoogleAIDetailed(); 