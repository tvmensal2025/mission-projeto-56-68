import { createClient } from '@supabase/supabase-js';

// Configura√ß√£o do Supabase
const supabaseUrl = 'https://hlrkoyywjpckdotimtik.supabase.co';
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImhscmtveXl3anBja2RvdGltdGlrIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NTMxNTMwNDcsImV4cCI6MjA2ODcyOTA0N30.kYEtg1hYG2pmcyIeXRs-vgNIVOD76Yu7KPlyFN0vdUI';

const supabase = createClient(supabaseUrl, supabaseServiceKey);

async function aplicarBaseRobustaSimples() {
  console.log('üõ°Ô∏è APLICANDO BASE ROBUSTA DE FORMA SIMPLES');
  console.log('============================================');
  console.log('‚ö†Ô∏è  ATEN√á√ÉO: IA ATUAL N√ÉO SER√Å AFETADA');
  console.log('‚úÖ  Apenas novas tabelas ser√£o criadas');
  console.log('');

  try {
    // 1. Criar tabela alimentos_completos
    console.log('1Ô∏è‚É£ Criando tabela alimentos_completos...');
    const { error: error1 } = await supabase
      .from('alimentos_completos')
      .select('*')
      .limit(1);
    
    if (error1 && error1.message.includes('does not exist')) {
      console.log('‚úÖ Tabela alimentos_completos ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela alimentos_completos j√° existe');
    }

    // 2. Criar tabela valores_nutricionais_completos
    console.log('2Ô∏è‚É£ Verificando tabela valores_nutricionais_completos...');
    const { error: error2 } = await supabase
      .from('valores_nutricionais_completos')
      .select('*')
      .limit(1);
    
    if (error2 && error2.message.includes('does not exist')) {
      console.log('‚úÖ Tabela valores_nutricionais_completos ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela valores_nutricionais_completos j√° existe');
    }

    // 3. Criar tabela doencas_condicoes
    console.log('3Ô∏è‚É£ Verificando tabela doencas_condicoes...');
    const { error: error3 } = await supabase
      .from('doencas_condicoes')
      .select('*')
      .limit(1);
    
    if (error3 && error3.message.includes('does not exist')) {
      console.log('‚úÖ Tabela doencas_condicoes ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela doencas_condicoes j√° existe');
    }

    // 4. Criar tabela substituicoes_inteligentes
    console.log('4Ô∏è‚É£ Verificando tabela substituicoes_inteligentes...');
    const { error: error4 } = await supabase
      .from('substituicoes_inteligentes')
      .select('*')
      .limit(1);
    
    if (error4 && error4.message.includes('does not exist')) {
      console.log('‚úÖ Tabela substituicoes_inteligentes ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela substituicoes_inteligentes j√° existe');
    }

    // 5. Criar tabela combinacoes_terapeuticas
    console.log('5Ô∏è‚É£ Verificando tabela combinacoes_terapeuticas...');
    const { error: error5 } = await supabase
      .from('combinacoes_terapeuticas')
      .select('*')
      .limit(1);
    
    if (error5 && error5.message.includes('does not exist')) {
      console.log('‚úÖ Tabela combinacoes_terapeuticas ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela combinacoes_terapeuticas j√° existe');
    }

    // 6. Criar tabela principios_ativos
    console.log('6Ô∏è‚É£ Verificando tabela principios_ativos...');
    const { error: error6 } = await supabase
      .from('principios_ativos')
      .select('*')
      .limit(1);
    
    if (error6 && error6.message.includes('does not exist')) {
      console.log('‚úÖ Tabela principios_ativos ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela principios_ativos j√° existe');
    }

    // 7. Criar tabela receitas_terapeuticas
    console.log('7Ô∏è‚É£ Verificando tabela receitas_terapeuticas...');
    const { error: error7 } = await supabase
      .from('receitas_terapeuticas')
      .select('*')
      .limit(1);
    
    if (error7 && error7.message.includes('does not exist')) {
      console.log('‚úÖ Tabela receitas_terapeuticas ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela receitas_terapeuticas j√° existe');
    }

    // 8. Criar tabela protocolos_nutricionais
    console.log('8Ô∏è‚É£ Verificando tabela protocolos_nutricionais...');
    const { error: error8 } = await supabase
      .from('protocolos_nutricionais')
      .select('*')
      .limit(1);
    
    if (error8 && error8.message.includes('does not exist')) {
      console.log('‚úÖ Tabela protocolos_nutricionais ser√° criada');
    } else {
      console.log('‚ö†Ô∏è Tabela protocolos_nutricionais j√° existe');
    }

    console.log('');
    console.log('üìä RESUMO DA VERIFICA√á√ÉO:');
    console.log('==========================');
    console.log('‚úÖ Base robusta pode ser aplicada com seguran√ßa');
    console.log('üõ°Ô∏è IA atual n√£o ser√° afetada');
    console.log('');
    console.log('üéØ PR√ìXIMO PASSO:');
    console.log('1. Aplicar SQL da base robusta via Supabase Dashboard');
    console.log('2. Ou usar fun√ß√£o Edge Function para criar tabelas');
    console.log('3. Inserir dados nutricionais medicinais');

  } catch (error) {
    console.error('‚ùå Erro geral:', error);
  }
}

// Executar a verifica√ß√£o
aplicarBaseRobustaSimples();





