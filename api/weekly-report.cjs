const { createClient } = require('@supabase/supabase-js');
const { Resend } = require('resend');

// Configura√ß√£o do Supabase (usar vari√°veis de ambiente)
const supabaseUrl = process.env.SUPABASE_URL;
const supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;

if (!supabaseUrl || !supabaseServiceKey) {
  throw new Error('Defina SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY nas vari√°veis de ambiente.');
}

const supabase = createClient(supabaseUrl, supabaseServiceKey);

// Configura√ß√£o do Resend (usar vari√°vel de ambiente)
const resendApiKey = process.env.RESEND_API_KEY;
if (!resendApiKey) {
  throw new Error('Defina RESEND_API_KEY nas vari√°veis de ambiente.');
}
const resend = new Resend(resendApiKey);

// Fun√ß√£o para gerar HTML do relat√≥rio semanal
function generateWeeklyReportHTML(user, data) {
  const { measurements, healthDiary, missions, conversations } = data;
  
  // Calcular estat√≠sticas
  const weightChange = measurements.length >= 2 ? 
    (measurements[0].peso_kg - measurements[measurements.length - 1].peso_kg) : 0;
  
  const avgMood = healthDiary.length > 0 ? 
    healthDiary.reduce((sum, h) => sum + (h.mood_rating || 0), 0) / healthDiary.length : 0;
  
  const completedMissions = missions.filter(m => m.is_completed).length;
  const totalPoints = missions.reduce((sum, m) => sum + (m.total_points || 0), 0);

  return `
<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Relat√≥rio Semanal de Sa√∫de</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            line-height: 1.6;
            color: #333;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
        }
        .container {
            max-width: 800px;
            margin: 0 auto;
            background: white;
            border-radius: 20px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        .header {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            text-align: center;
            padding: 40px 20px;
        }
        .header h1 {
            margin: 0;
            font-size: 2.5em;
            font-weight: 300;
        }
        .content {
            padding: 40px;
        }
        .section {
            margin-bottom: 40px;
            padding: 30px;
            background: #f8f9fa;
            border-radius: 15px;
            border-left: 5px solid #667eea;
        }
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-top: 20px;
        }
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            text-align: center;
            box-shadow: 0 5px 15px rgba(0,0,0,0.1);
        }
        .stat-value {
            font-size: 2em;
            font-weight: bold;
            color: #667eea;
        }
        .stat-label {
            color: #666;
            margin-top: 5px;
        }
        .character-section {
            display: flex;
            align-items: center;
            margin-bottom: 20px;
        }
        .character-avatar {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            margin-right: 20px;
            object-fit: cover;
        }
        .footer {
            background: #2d3436;
            color: white;
            text-align: center;
            padding: 30px;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üè• Dr. Vita</h1>
            <p>Relat√≥rio Semanal de Sa√∫de para ${user.full_name}</p>
            <p>${new Date().toLocaleDateString('pt-BR', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' })}</p>
        </div>

        <div class="content">
            <!-- Resumo da Semana -->
            <div class="section">
                <h2>üìä Resumo da Semana</h2>
                <div class="stats-grid">
                    <div class="stat-card">
                        <div class="stat-value ${weightChange > 0 ? 'color: #00b894' : weightChange < 0 ? 'color: #e17055' : 'color: #fdcb6e'}">
                            ${weightChange > 0 ? '+' : ''}${weightChange.toFixed(1)}kg
                        </div>
                        <div class="stat-label">Varia√ß√£o de Peso</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">${avgMood.toFixed(1)}/10</div>
                        <div class="stat-label">Humor M√©dio</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">${completedMissions}</div>
                        <div class="stat-label">Miss√µes Completas</div>
                    </div>
                    <div class="stat-card">
                        <div class="stat-value">${totalPoints}</div>
                        <div class="stat-label">Pontos Conquistados</div>
                    </div>
                </div>
            </div>

            <!-- Mensagem da Sofia -->
            <div class="section" style="background: linear-gradient(135deg, #ffeaa7 0%, #fab1a0 100%); border-left: 5px solid #e17055;">
                <div class="character-section">
                    <img src="https://hlrkoyywjpckdotimtik.supabase.co/storage/v1/object/public/course-thumbnails/Sofia%20sem%20fundo.png" 
                         alt="Sofia" class="character-avatar">
                    <h2 style="color: #2d3436; margin: 0;">üíù Mensagem da Sof.ia</h2>
                </div>
                <div style="color: #2d3436; font-style: italic; line-height: 1.8;">
                    <p>Ol√°, ${user.full_name}!</p>
                    <p>Notei que n√£o conversamos esta semana. Sinto sua falta!</p>
                    <p>Estou aqui esperando por voc√™ sempre que precisar. Seja para compartilhar como foi seu dia, tirar d√∫vidas ou simplesmente desabafar - estou pronta para ouvir!</p>
                    <p>Se conversamos regularmente, posso criar relat√≥rios muito mais precisos e personalizados para voc√™. Cada conversa me ensina mais sobre seus h√°bitos, sentimentos e objetivos.</p>
                    <p style="text-align: right; margin-top: 20px;"><strong>Esperando voc√™ no chat! Sof.ia</strong></p>
                </div>
            </div>

            <!-- An√°lise M√©dica do Dr. Vital -->
            <div class="section" style="background: linear-gradient(135deg, #74b9ff 0%, #0984e3 100%); border-left: 5px solid #0984e3;">
                <div class="character-section">
                    <img src="https://hlrkoyywjpckdotimtik.supabase.co/storage/v1/object/public/course-thumbnails/Dr.Vital%20sem%20fundo.png" 
                         alt="Dr. Vital" class="character-avatar">
                    <h2 style="color: white; margin: 0;">ü©∫ Dr. Vita - An√°lise M√©dica Personalizada</h2>
                </div>
                <div style="color: white; line-height: 1.8;">
                    <p>${user.full_name}, aqui √© o Dr. Vita.</p>
                    <p>N√£o identifiquei medi√ß√µes de bioimped√¢ncia nesta semana. Como seu agente pessoal de sa√∫de, preciso de dados regulares para fornecer an√°lises precisas.</p>
                    <p><strong>Recomenda√ß√£o m√©dica:</strong> Realize pesagens regulares para monitoramento adequado da composi√ß√£o corporal.</p>
                    <p style="text-align: right; margin-top: 20px;"><strong>Dr. Vita - Seu Agente Pessoal de Sa√∫de</strong></p>
                </div>
            </div>

            <!-- Recomenda√ß√µes -->
            <div class="section">
                <h2>üí° Recomenda√ß√µes Precisas para Pr√≥xima Semana</h2>
                <ul>
                    ${completedMissions < 5 ? '<li>üéØ Tente completar mais miss√µes di√°rias para manter a consist√™ncia</li>' : ''}
                    ${avgMood < 7 ? '<li>üòä Considere atividades que melhorem seu humor, como medita√ß√£o ou exerc√≠cios leves</li>' : ''}
                    ${measurements.length < 3 ? '<li>‚öñÔ∏è Mantenha pesagens regulares para acompanhar melhor seu progresso</li>' : ''}
                    ${healthDiary.length < 5 ? '<li>üìù Continue registrando seus h√°bitos di√°rios no app</li>' : ''}
                    ${conversations.length === 0 ? '<li>üí¨ <strong>Converse com a Sof.ia para relat√≥rios mais precisos!</strong></li>' : ''}
                    ${conversations.length > 0 && conversations.length < 3 ? '<li>üí¨ Continue conversando com a Sof.ia - mais conversas = relat√≥rios mais detalhados!</li>' : ''}
                    ${conversations.length >= 3 ? '<li>üí¨ Continue suas conversas regulares com a Sof.ia!</li>' : ''}
                </ul>
            </div>
        </div>

        <div class="footer">
            <p>üì± Continue acompanhando sua sa√∫de no app</p>
            <p>Este relat√≥rio foi gerado automaticamente pelo <a href="#" style="color: #667eea;">Dr. Vita AI</a></p>
            <p><small>Relat√≥rio n√£o substitui consulta m√©dica profissional</small></p>
        </div>
    </div>
</body>
</html>`;
}

// Fun√ß√£o para gerar e enviar relat√≥rio semanal
async function generateAndSendWeeklyReport(userEmail, userName) {
  try {
    console.log(`üìß Gerando relat√≥rio para ${userName} (${userEmail})...`);

    // Buscar dados do usu√°rio
    const { data: user, error: userError } = await supabase
      .from('profiles')
      .select('*')
      .eq('email', userEmail)
      .single();

    if (userError || !user) {
      console.error('‚ùå Usu√°rio n√£o encontrado:', userError);
      return { success: false, error: 'Usu√°rio n√£o encontrado' };
    }

    // Buscar dados da semana
    const oneWeekAgo = new Date();
    oneWeekAgo.setDate(oneWeekAgo.getDate() - 7);

    const { data: measurements } = await supabase
      .from('weight_measurements')
      .select('*')
      .eq('user_id', user.user_id)
      .gte('created_at', oneWeekAgo.toISOString())
      .order('created_at', { ascending: false });

    const { data: healthDiary } = await supabase
      .from('health_diary')
      .select('*')
      .eq('user_id', user.user_id)
      .gte('created_at', oneWeekAgo.toISOString());

    const { data: missions } = await supabase
      .from('daily_mission_sessions')
      .select('*')
      .eq('user_id', user.user_id)
      .gte('created_at', oneWeekAgo.toISOString());

    const { data: conversations } = await supabase
      .from('chat_conversations')
      .select('*')
      .eq('user_id', user.user_id)
      .gte('created_at', oneWeekAgo.toISOString());

    // Gerar HTML do relat√≥rio
    const reportHTML = generateWeeklyReportHTML(user, {
      measurements: measurements || [],
      healthDiary: healthDiary || [],
      missions: missions || [],
      conversations: conversations || []
    });

    // Enviar email
    const { data: emailResult, error: emailError } = await resend.emails.send({
      from: "Dr. Vital <onboarding@resend.dev>",
      to: [userEmail],
      subject: `üìä Seu Relat√≥rio Semanal de Sa√∫de - ${new Date().toLocaleDateString('pt-BR')}`,
      html: reportHTML,
    });

    if (emailError) {
      console.error('‚ùå Erro ao enviar email:', emailError);
      return { success: false, error: emailError.message };
    }

    console.log('‚úÖ Relat√≥rio enviado com sucesso!');
    return { success: true, data: emailResult };

  } catch (error) {
    console.error('üí• Erro fatal:', error);
    return { success: false, error: error.message };
  }
}

// Fun√ß√£o para testar relat√≥rio
async function testWeeklyReport() {
  try {
    console.log('üß™ Testando relat√≥rio semanal...');
    
    const testEmail = 'tvmensal2025@gmail.com';
    const testUserName = 'Sirlene Correa';

    const result = await generateAndSendWeeklyReport(testEmail, testUserName);
    
    console.log('Resultado do teste:', result);
    return result;

  } catch (error) {
    console.error('üí• Erro no teste:', error);
    return { success: false, error: error.message };
  }
}

// Exportar fun√ß√µes
module.exports = {
  generateAndSendWeeklyReport,
  testWeeklyReport,
  generateWeeklyReportHTML
};

// Se executado diretamente
if (require.main === module) {
  async function main() {
    console.log('üìß API de Relat√≥rio Semanal');
    console.log('='.repeat(50));
    
    // Testar relat√≥rio
    console.log('\nüß™ Testando relat√≥rio semanal...');
    const result = await testWeeklyReport();
    console.log('Resultado:', result);
  }
  
  main().catch(console.error);
} 